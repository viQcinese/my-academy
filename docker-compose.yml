services:
  front:
    build:
      context: ./front
    ports:
      - "5173:5173"
    environment:
      VITE_AUTH_PROVIDER_DOMAIN: ${AUTH_PROVIDER_DOMAIN}
      VITE_AUTH_PROVIDER_CLIENT_ID: ${AUTH_PROVIDER_CLIENT_ID}
      VITE_AUTH_PROVIDER_AUDIENCE: ${AUTH_PROVIDER_AUDIENCE}
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./front:/front
    networks:
      - my-network
    command: npm run dev

  app:
    build:
      context: ./app
    ports:
      - "3000:3000"
    environment:
      DATABASE_HOSTNAME: ${DATABASE_HOSTNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_USER_PASSWORD: ${DATABASE_USER_PASSWORD}
      DATABASE_URL: mysql://root:${DATABASE_ROOT_PASSWORD}@${DATABASE_HOSTNAME}:${DATABASE_PORT}/${DATABASE_NAME}

      AUTH_PROVIDER_DOMAIN: ${AUTH_PROVIDER_DOMAIN}
      AUTH_PROVIDER_CLIENT_ID: ${AUTH_PROVIDER_CLIENT_ID}
      AUTH_PROVIDER_AUDIENCE: ${AUTH_PROVIDER_AUDIENCE}

    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 5s
      retries: 10
      start_period: 30s
      timeout: 10s
    volumes:
      - ./app:/app
    networks:
      - my-network
    command: npm run dev

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_USER_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - my_sql:/var/lib/mysql
    networks:
      - my-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 5s
      retries: 10
      start_period: 30s
      timeout: 10s

volumes:
  my_sql:

networks:
  my-network:
    driver: bridge
