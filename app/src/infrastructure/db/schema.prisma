// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"  
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Student {
  id Int @id @default(autoincrement())
  firstName String  @map("first_name")
  isActive Boolean @map("is_active")
  
  lastName String? @map("last_name")
  birthdate DateTime? @map("birth_date")
  document String? @map("document")
  cellphone String? @map("cellphone")
  email String? @map("email")
  
  enrollments Enrollment[]
  invoices Invoice[]

  @@map("students")
}

model Class {
  id Int @id @default(autoincrement())
  name String  @map("name")
  isActive Boolean @map("is_active")

  enrollments Enrollment[]

  @@map("classes")
}

model Enrollment {
  id Int @id @default(autoincrement())
  studentId Int @map("student_id")
  classId Int @map("class_id")

  student Student @relation(fields: [studentId], references: [id])
  class Class @relation(fields: [classId], references: [id])

  @@unique([studentId, classId])
  @@map("enrollments")
}

model Invoice {
  id String @id @default(uuid())
  studentId Int @map("student_id")
  amount Int @map("amount")
  currency String @map("currency")
  isPaid Boolean @map("is_paid")
  createdAt DateTime @map("created_at") @default(now())

  description String? @map("description") @db.VarChar(512) 
  due_date DateTime? @map("due_date")

  student Student @relation(fields: [studentId], references: [id])

  @@map("invoices")
}