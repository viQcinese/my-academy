# --- Stage 1: Build (Install dependencies and compile TypeScript) ---
  FROM node:22 AS builder
  WORKDIR /app
  
  # Copy only package.json and package-lock.json to leverage Docker caching
  COPY package*.json ./
  
  RUN npm install --frozen-lockfile
  
  # Copy the rest of the backend source code
  COPY . .

  RUN npm run db:generate

  # Compile TypeScript (assuming you have a tsconfig.json)
  RUN npm run build
  
  # --- Stage 2: Production (Run only the compiled code) ---
  FROM node:22-alpine 
  WORKDIR /app
  
  # Copy only the compiled output and production dependencies
  COPY --from=builder /app/dist ./dist
  COPY --from=builder /app/package.json ./
  COPY --from=builder /app/node_modules ./node_modules
  
  # Expose backend port (change to whatever your API uses)
  EXPOSE 3000
  
  CMD ["node", "dist/index.js"]